{"frames":[{"func":"stan_glm(score ~ 1 + team + adversary + condition + ranking_adv, \n    data = train, family = poisson, iter = 5000, contrasts = list(team = \"contr.sum\", \n        adversary = \"contr.sum\"))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stan_glm.fit(x = X, y = Y, weights = weights, offset = offset, \n    family = family, prior = prior, prior_intercept = prior_intercept, \n    prior_aux = prior_aux, prior_PD = prior_PD, algorithm = algorithm, \n    mean_PPD = mean_PPD, adapt_delta = adapt_delta, QR = QR,  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"do.call(rstan::sampling, sampling_args)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"(new(\"nonstandardGenericFunction\", .Data = function (object, \n    ...) \n{\n    standardGeneric(\"sampling\") ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"(new(\"nonstandardGenericFunction\", .Data = function (object, \n    ...) \n{\n    standardGeneric(\"sampling\") ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".local(object, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"try(sampler$call_sampler(args_list[[i]]))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatch(expr, error = function(e) {\n    call <- conditionCall(e)\n    if (!is.null(call)) {\n        if (identical(call[[1L]], quote(doTryCatch)))  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchList(expr, classes, parentenv, handlers)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"doTryCatch(return(expr), name, parentenv, handler)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"sampler$call_sampler(args_list[[i]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"S3 method 'group_by.tbl' not found"}