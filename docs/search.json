[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Mauro Florez",
    "section": "",
    "text": "I am a PhD Candidate in Statistics at Rice University. My research focuses on developing Bayesian models for multivariate data, working under the direction of Dr. Marina Vannucci. I am passionate about formulating innovative statistical methods to analyze different types of data, with a diverse range of applications, from healthcare to sports.\nWhen I am not immersed in data and research, I love soccer –watching or playing– as well as exploring new places and taking pictures. Check out some of my travel photos here."
  },
  {
    "objectID": "index.html#about-me",
    "href": "index.html#about-me",
    "title": "Mauro Florez",
    "section": "",
    "text": "I am a PhD Candidate in Statistics at Rice University. My research focuses on developing Bayesian models for multivariate data, working under the direction of Dr. Marina Vannucci. I am passionate about formulating innovative statistical methods to analyze different types of data, with a diverse range of applications, from healthcare to sports.\nWhen I am not immersed in data and research, I love soccer –watching or playing– as well as exploring new places and taking pictures. Check out some of my travel photos here."
  },
  {
    "objectID": "index.html#research-interests",
    "href": "index.html#research-interests",
    "title": "Mauro Florez",
    "section": "Research Interests",
    "text": "Research Interests\n\n\nBayesian Modeling\nStatistical Computing\nGraphical Models\nApplied Statistics\nMachine Learning\n\n\n\n\n\n\nMy latest projects involve developing frameworks for estimating graphical models that identify relationships or dependencies between different mixed data types.\nA list of projects can be found here."
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Mauro Florez",
    "section": "Education",
    "text": "Education\n\n\n\n\n\nI completed my undergraduate studies in Bogotá, Colombia, earning a BS in Mathematics from Universidad Sergio Arboleda, with a tuition waiver scholarship. Additionally, I hold a BS in Statistics from the Universidad Nacional de Colombia, where I graduated with distinction (#1 class). In 2020, I was awarded a Fulbright scholarship to pursue my PhD at Rice University"
  },
  {
    "objectID": "index.html#selected-experience",
    "href": "index.html#selected-experience",
    "title": "Mauro Florez",
    "section": "Selected Experience",
    "text": "Selected Experience\n\nData Analyst, Minciencias, 2019 - 2020\nStatistical Consultant, Universidad del Rosario, 2017 - 2018\nLecturer - See the full list of courses here."
  },
  {
    "objectID": "teaching.html",
    "href": "teaching.html",
    "title": "Teaching",
    "section": "",
    "text": "Lecturer\n\n\nProbability and Statistics (STAT 310) - Rice University, Houston, TX - Summer 2022 [Instructor Evaluation]\nIntroduction to Statistics - Universidad Sergio Arboleda, Bogotá, CO - Fall 2019\nIntroduction to Statistics - Universidad Sergio Arboleda, Bogotá, CO - Spring 2019\nLogic & Analysis - Universidad Sergio Arboleda, Bogotá, CO - Spring 2019\nIntroduction to Statistics - Universidad Sergio Arboleda, Bogotá, CO - Fall 2018\nLogic & Analysis - Universidad Sergio Arboleda, Bogotá, CO - Fall 2018\n\n\n\nTeaching Assistant\n\n\nBayesian Statistics (STAT 525) - Rice University, Houston, TX - Fall 2022\nIntroduction to Stat for Biosciences (STAT 305) - Rice University, Houston, TX - Spring 2021\nStatistical Genomics in R - Universidad Nacional de Colombia, Bogotá, CO - Fall 2018\nProbability and Basic Inference (Certificate course) - Universidad Nacional de Colombia, Bogotá, CO - Fall 2017\n\n\n\nReviewer\n\n\nWIREs Computational Statistics, November 2023"
  },
  {
    "objectID": "gallery.html",
    "href": "gallery.html",
    "title": "Gallery",
    "section": "",
    "text": "Florence\n\n\n\n\n\n\nThe Brunelleschi Dome\n\n\n\n\n\nSan Gimignano\n\n\n\n\n\nLucca\n\n\n\n\n\nColosseum\n\n\n\n\n\nCinque Terre\n\n\n\n\n\nColosseum at night\n\n\n\n\n\nDavid by Michelangelo\n\n\n\n\n\nRome"
  },
  {
    "objectID": "gallery.html#italy",
    "href": "gallery.html#italy",
    "title": "Gallery",
    "section": "",
    "text": "Florence\n\n\n\n\n\n\nThe Brunelleschi Dome\n\n\n\n\n\nSan Gimignano\n\n\n\n\n\nLucca\n\n\n\n\n\nColosseum\n\n\n\n\n\nCinque Terre\n\n\n\n\n\nColosseum at night\n\n\n\n\n\nDavid by Michelangelo\n\n\n\n\n\nRome"
  },
  {
    "objectID": "gallery.html#malta",
    "href": "gallery.html#malta",
    "title": "Gallery",
    "section": "Malta",
    "text": "Malta\n\n\n\n\nMalta\n\n\n\n\n\nMalta"
  },
  {
    "objectID": "projects/MultRegCMP.html",
    "href": "projects/MultRegCMP.html",
    "title": "Bayesian Regression Model for Multivariate Count Data",
    "section": "",
    "text": "MultRegCMP is an R package that I designed to fit a Bayesian Multivariate regression model for count data. This model have been used to analyze football and baseball scores. A practical example on how to use it can be found in this Football Vignette."
  },
  {
    "objectID": "projects/MultRegCMP.html#multregcmp",
    "href": "projects/MultRegCMP.html#multregcmp",
    "title": "Bayesian Regression Model for Multivariate Count Data",
    "section": "",
    "text": "MultRegCMP is an R package that I designed to fit a Bayesian Multivariate regression model for count data. This model have been used to analyze football and baseball scores. A practical example on how to use it can be found in this Football Vignette."
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Projects",
    "section": "",
    "text": "Projects\n\n\n\n\n\n\n\n\n\n\nPredicting Euro & Copa America - 2024\n\n\n\n\n\nI proposed a statistical model to analyze the results of the Euro Cup and the Copa America 2024.\n\n\n\n\n\nJun 30, 2024\n\n\nMauro Florez\n\n\n\n\n\n\n\n\n\n\n\n\nBayesian Regression Model for Multivariate Count Data\n\n\n\n\n\nAn R package designed to fit a Bayesian Regression Model for multivariate count data where the data is distributed as Conway-Maxwell-Poisson distribution\n\n\n\n\n\nMay 30, 2024\n\n\nMauro Florez\n\n\n\n\n\n\n\n\n\n\n\n\nLung Disease Risk Prediction in a Coal Mine\n\n\n\n\n\nSurvival Model to predict the risk of contracting a lung disease for workers of one of the largest coal mines in America\n\n\n\n\n\nJan 10, 2019\n\n\nMauro Florez\n\n\n\n\n\n\nNo matching items\n\n\n\n\nAcademic Publications\n\nFlorez, M., Guindani, M. and Vannucci, M. (2023). Bayesian Bivariate Conway-Maxwell-Poisson Regression Model for Correlated Count Data in Sports, In revision.\nRivera, H. M., Muñoz, E. N., Osuna, D., Florez, M., Carvajal, M., & Gómez, L. A. (2021). Reciprocal changes in miRNA expression with pigmentation and decreased proliferation induced in mouse B16F1 melanoma cells by l-Tyrosine and 5-bromo-2′-deoxyuridine. International Journal of Molecular Sciences, 22(4). https://doi.org/10.3390/ijms22041591\nOtálora-Otálora, B. A., Florez, M., López-Kleine, L., Canas Arboleda, A., Grajales Urrego, D. M., & Rojas, A. (2019). Joint transcriptomic analysis of lung cancer and other lung diseases. Frontiers in Genetics, 10. https://www.frontiersin.org/journals/genetics/articles/10.3389/fgene.2019.01260"
  },
  {
    "objectID": "projects/euro_2024.html",
    "href": "projects/euro_2024.html",
    "title": "Predicting Euro & Copa America - 2024",
    "section": "",
    "text": "In this project, I will propose a model for the Euro & Copa America - 2024 scores."
  },
  {
    "objectID": "projects/euro_2024.html#packages",
    "href": "projects/euro_2024.html#packages",
    "title": "Predicting Euro & Copa America - 2024",
    "section": "Packages",
    "text": "Packages\nI will use a Bayesian model, so we need the following libraries\n\nrequire(rstanarm)\nrequire(rstantools)\nrequire(bayesplot)\n\nAs well as\n\nrequire(readr)\nrequire(dplyr)\nrequire(lubridate)\nrequire(ggplot2)\nrequire(ggrepel)\nrequire(latex2exp)"
  },
  {
    "objectID": "projects/euro_2024.html#data",
    "href": "projects/euro_2024.html#data",
    "title": "Predicting Euro & Copa America - 2024",
    "section": "Data",
    "text": "Data\nThe data is contained in this repository https://github.com/martj42/international_results.\n\nurlfile = \"https://raw.githubusercontent.com/martj42/international_results/master/results.csv\"\n\nWe load the data\n\ndata &lt;- read_csv(url(urlfile), show_col_types = FALSE)\n\nThe proposed model is based on the teams’ strengths attacking and defending. Therefore, we will consider only the games played during 2024. An improved model would be one with dynamic strengths. But that is a future project.\n\neuro_2024 = c('Albania','Austria','Belgium','Croatia','Czech Republic','Denmark','England','France','Georgia','Germany','Hungary','Italy','Netherlands','Poland','Portugal','Romania','Scotland','Serbia','Slovakia','Slovenia','Spain','Switzerland','Turkey','Ukraine')\n\namerica_2024 = sort(c('Argentina', 'Chile', 'Peru', 'Canada', 'Mexico', 'Ecuador', 'Venezuela', 'Jamaica', 'United States', 'Uruguay', 'Panama', 'Bolivia', 'Brazil', 'Colombia', 'Paraguay', 'Costa Rica'))  \n\nscores &lt;- data %&gt;% \n  filter(home_team %in% euro_2024 & away_team %in% euro_2024) %&gt;% \n  filter(date &gt; \"2023-06-01\") %&gt;% \n  mutate(id = row_number(), cup = \"Euro\") %&gt;% \n  bind_rows(data %&gt;% \n  filter(home_team %in% america_2024 & away_team %in% america_2024) %&gt;% \n  filter(date &gt; \"2023-06-01\") %&gt;% \n  mutate(id = row_number(), cup = \"America\")\n  )\n\nFor example, we consider the following games played by Portugal.\n\nscores %&gt;% \n  filter(home_team == \"Portugal\" | away_team == \"Portugal\")\n\n# A tibble: 9 × 11\n  date       home_team away_team  home_score away_score tournament city  country\n  &lt;date&gt;     &lt;chr&gt;     &lt;chr&gt;           &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt; &lt;chr&gt;  \n1 2023-09-08 Slovakia  Portugal            0          1 UEFA Euro… Brat… Slovak…\n2 2023-10-13 Portugal  Slovakia            3          2 UEFA Euro… Porto Portug…\n3 2024-03-26 Slovenia  Portugal            2          0 Friendly   Ljub… Sloven…\n4 2024-06-08 Portugal  Croatia             1          2 Friendly   Oeir… Portug…\n5 2024-06-18 Portugal  Czech Rep…          2          1 UEFA Euro  Leip… Germany\n6 2024-06-22 Turkey    Portugal            0          3 UEFA Euro  Dort… Germany\n7 2024-06-26 Georgia   Portugal            2          0 UEFA Euro  Gels… Germany\n8 2024-07-01 Portugal  Slovenia            0          0 UEFA Euro  Fran… Germany\n9 2024-07-05 Portugal  France             NA         NA UEFA Euro  Hamb… Germany\n# ℹ 3 more variables: neutral &lt;lgl&gt;, id &lt;int&gt;, cup &lt;chr&gt;\n\n\nand the following games played by Colombia\n\nscores %&gt;% \n  filter(home_team == \"Colombia\" | away_team == \"Colombia\")\n\n# A tibble: 12 × 11\n   date       home_team away_team home_score away_score tournament city  country\n   &lt;date&gt;     &lt;chr&gt;     &lt;chr&gt;          &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt; &lt;chr&gt;  \n 1 2023-09-07 Colombia  Venezuela          1          0 FIFA Worl… Barr… Colomb…\n 2 2023-09-12 Chile     Colombia           0          0 FIFA Worl… Sant… Chile  \n 3 2023-10-12 Colombia  Uruguay            2          2 FIFA Worl… Barr… Colomb…\n 4 2023-10-17 Ecuador   Colombia           0          0 FIFA Worl… Quito Ecuador\n 5 2023-11-16 Colombia  Brazil             2          1 FIFA Worl… Barr… Colomb…\n 6 2023-11-21 Paraguay  Colombia           0          1 FIFA Worl… Asun… Paragu…\n 7 2023-12-16 Mexico    Colombia           2          3 Friendly   Los … United…\n 8 2024-06-08 United S… Colombia           1          5 Friendly   Land… United…\n 9 2024-06-15 Colombia  Bolivia            3          0 Friendly   Denv… United…\n10 2024-06-24 Colombia  Paraguay           2          1 Copa Amér… Hous… United…\n11 2024-06-28 Colombia  Costa Ri…          3          0 Copa Amér… Glen… United…\n12 2024-07-02 Brazil    Colombia          NA         NA Copa Amér… Sant… United…\n# ℹ 3 more variables: neutral &lt;lgl&gt;, id &lt;int&gt;, cup &lt;chr&gt;\n\n\n\nFiltering data\n\nhome_scores &lt;- scores %&gt;% \n  select(id, score = home_score, team = home_team, adversary = away_team, date = date, cup) %&gt;% \n  mutate(condition = ifelse(scores$neutral, \"neutral\", \"home\"))\n  \naway_scores &lt;- scores %&gt;% \n  select(id, score = away_score, team = away_team, adversary = home_team, date = date, cup) %&gt;% \n  mutate(condition = ifelse(scores$neutral, \"neutral\", \"away\"))\n\ntotal_scores &lt;- union_all(home_scores, away_scores)\n\nWe also consider the ranking FIFA of the teams as covariate. For every game, select the up-to-date ranking\n\npath0 &lt;- \"https://raw.githubusercontent.com/Dato-Futbol/fifa-ranking/master/ranking_fifa_historical.csv\"\nrank &lt;- read_csv(url(path0), show_col_types = FALSE)\n\nrank &lt;- rank %&gt;% \n  select(team, total_points, date) %&gt;% \n  group_by(date) %&gt;% \n  mutate(ranking = rank(-total_points))\n\nMerging the data will be\n\nscores_rank &lt;- total_scores %&gt;% \n  left_join(rank, by = join_by(adversary == team), relationship = \"many-to-many\") %&gt;% \n  filter(date.x &gt;= date.y) %&gt;% \n  mutate(diff_date = date.x - date.y) %&gt;% \n  group_by(id, team) %&gt;% \n  slice_min(diff_date) %&gt;% \n  select(id, score, team, adversary, condition, date_game = date.x, ranking_adv = ranking, date_rank = date.y, cup)\n\nWe are separating the data for both Euro and Copa America. In the case of the Euro, the eighth-finals started on June 29th, we will train the data before that data and leave the rest for testing. In the case of Copa America, I will train it before the last round of groups started.\n\ndate_euro = \"2024-06-28\"\ndate_ca = \"2024-06-29\"\n\ntrain_euro &lt;- scores_rank %&gt;% \n  filter(date_game &lt; date_euro, cup == \"Euro\")\n\ntrain_america &lt;- scores_rank %&gt;% \n  filter(date_game &lt; date_ca, cup == \"America\")\n\ntest_euro &lt;- scores_rank %&gt;% \n  filter(date_game &gt;= date_euro, cup == \"Euro\")\n\ntest_america &lt;- scores_rank %&gt;% \n  filter(date_game &gt;= date_ca, cup == \"America\")"
  },
  {
    "objectID": "projects/euro_2024.html#fitting-the-model",
    "href": "projects/euro_2024.html#fitting-the-model",
    "title": "Predicting Euro & Copa America - 2024",
    "section": "Fitting the model",
    "text": "Fitting the model\nTo fit the model I would consider the scores Neg. Binomial distributed for simplicity, one better option is the Conway-Maxwell-Poisson. However, we will use a simple model for computational reasons.\n\nmodel_euro &lt;- stan_glm(score ~ 1 + team + adversary + condition + ranking_adv, data = train_euro, family = poisson, iter = 5000, contrasts = list(team = \"contr.sum\", adversary = \"contr.sum\"))\n\n\nmodel_america &lt;- stan_glm(score ~ 1 + team + adversary + condition + ranking_adv, data = train_america, family = poisson, iter = 5000, contrasts = list(team = \"contr.sum\", adversary = \"contr.sum\"))"
  },
  {
    "objectID": "projects/euro_2024.html#predictions",
    "href": "projects/euro_2024.html#predictions",
    "title": "Predicting Euro & Copa America - 2024",
    "section": "Predictions",
    "text": "Predictions\n\nEuro\nNow, we predict the scores of the future games:\n\ntest_pred &lt;- test_euro %&gt;% \n  select(id, team, adversary, condition, ranking_adv)\n\npredictions &lt;- posterior_predict(model_euro, newdata = test_pred) \n\nmean_goals &lt;- apply(predictions, 2, mean)\n\ntest_pred &lt;- test_pred %&gt;% \n  ungroup() %&gt;% \n  mutate(goals = mean_goals) %&gt;% \n  group_by(id) %&gt;% \n  summarise(\"Team 1\" = first(team),\n            \"Exp. Goals\" = first(goals),\n            \"Team 2\" = last(team),\n            \"Exp. Goals 2\" = last(goals)) \n\nTherefore the predictions of future games are:\n\n\nRound of 16\n\ntest_pred %&gt;% \n  print(n = 1e3)\n\n# A tibble: 11 × 5\n      id `Team 1`    `Exp. Goals` `Team 2`    `Exp. Goals 2`\n   &lt;int&gt; &lt;chr&gt;              &lt;dbl&gt; &lt;chr&gt;                &lt;dbl&gt;\n 1    91 Italy              0.598 Switzerland          0.787\n 2    92 Denmark            1.11  Germany              0.979\n 3    93 England            1.50  Slovakia             0.583\n 4    94 Georgia            0.302 Spain                3.06 \n 5    95 Belgium            0.787 France               0.461\n 6    96 Portugal           0.748 Slovenia             1.30 \n 7    97 Netherlands        1.37  Romania              2.63 \n 8    98 Austria            2.42  Turkey               0.800\n 9    99 Germany            0.399 Spain                1.23 \n10   100 France             1.11  Portugal             0.672\n11   101 England            0.932 Switzerland          0.789\n\n\nAccording to this, the quarter-finals will be Switzerland vs England, Austria vs Netherlands, France vs Slovenia, Germany vs Spain.\n\n\nQuarter-Finals\nTo update\n\n\nCopa America\nSimilarly, we can generate the predictions for the last round of the games in Copa América\n\ntest_pred &lt;- test_america %&gt;% \n  select(id, team, adversary, condition, ranking_adv)\n\npredictions &lt;- posterior_predict(model_america, newdata = test_pred) \n\nmean_goals &lt;- apply(predictions, 2, mean)\n\ntest_pred &lt;- test_pred %&gt;% \n  ungroup() %&gt;% \n  mutate(goals = mean_goals) %&gt;% \n  group_by(id) %&gt;% \n  summarise(\"Team 1\" = first(team),\n            \"Exp. Goals\" = first(goals),\n            \"Team 2\" = last(team),\n            \"Exp. Goals 2\" = last(goals)) \n\n\ntest_pred %&gt;% \n  print(n = 1e3)\n\n# A tibble: 10 × 5\n      id `Team 1`      `Exp. Goals` `Team 2`      `Exp. Goals 2`\n   &lt;int&gt; &lt;chr&gt;                &lt;dbl&gt; &lt;chr&gt;                  &lt;dbl&gt;\n 1    84 Argentina            1.41  Peru                  0.0404\n 2    85 Canada               0.874 Chile                 1.04  \n 3    86 Ecuador              1.46  Mexico                1.08  \n 4    87 Jamaica              0.368 Venezuela             2.16  \n 5    88 United States        0.815 United States         0.815 \n 6    89 Bolivia              0.806 Panama                1.21  \n 7    90 Brazil               1.31  Colombia              1.77  \n 8    91 Costa Rica           0.494 Paraguay              0.621 \n 9    92 Argentina            1.27  Ecuador               0.402 \n10    93 Canada               0.617 Venezuela             1.82  \n\n\nIf we want to see the distribution of a particular game, for example the game 92, Argentina vs Ecuador, it will be something like\n\nresults_game &lt;- tibble(\"Argentina\" = predictions[,16], \"Ecuador\" = predictions[,17])\n\ndf_count &lt;- results_game %&gt;% \n  group_by(Argentina, Ecuador) %&gt;% \n  summarise(count = n(), .groups = \"keep\") %&gt;% \n  ungroup()\n\ntotal_combinations &lt;- nrow(results_game)\n\ndf_count &lt;- df_count %&gt;% \n    mutate(proportion = count/total_combinations)\n  \nggplot(df_count, aes(x = Argentina, y = Ecuador, fill = proportion)) +\n  geom_tile() + \n  scale_fill_gradient(low = \"white\", high = \"blue\") + \n  labs(title = \"Heatmap of Goals Scored by the two teams\",\n       x = \"Argentina\", \n       y = \"Ecuador\",\n       fill = \"Probability\") + \n  theme_minimal()"
  },
  {
    "objectID": "projects/copaamerica_2024.html",
    "href": "projects/copaamerica_2024.html",
    "title": "Predicting Copa América - 2024",
    "section": "",
    "text": "In this project, I will propose a model to predict the scores in the Euro 2024."
  },
  {
    "objectID": "projects/copaamerica_2024.html#packages",
    "href": "projects/copaamerica_2024.html#packages",
    "title": "Predicting Copa América - 2024",
    "section": "Packages",
    "text": "Packages\nI will use a Bayesian model, so we need the following libraries\n\nrequire(rstanarm)\nrequire(rstantools)\nrequire(bayesplot)\n\nAs well as\n\nrequire(readr)\nrequire(dplyr)\nrequire(lubridate)\nrequire(ggplot2)\nrequire(ggrepel)\nrequire(latex2exp)"
  },
  {
    "objectID": "projects/copaamerica_2024.html#data",
    "href": "projects/copaamerica_2024.html#data",
    "title": "Predicting Copa América - 2024",
    "section": "Data",
    "text": "Data\nThe data is contained in this repository https://github.com/martj42/international_results.\n\nurlfile = \"https://raw.githubusercontent.com/martj42/international_results/master/results.csv\"\n\nWe load the data\n\ndata &lt;- read_csv(url(urlfile), show_col_types = FALSE)\n\nThe proposed model is based on the teams’ strengths attacking and defending. Therefore, we will consider only the games played during 2024. An improved model would be one with dynamic strengths.\n\namerica_2024 = sort(c('Argentina', 'Chile', 'Peru', 'Canada', 'Mexico', 'Ecuador', 'Venezuela', 'Jamaica', 'United States', 'Uruguay', 'Panama', 'Bolivia', 'Brazil', 'Colombia', 'Paraguay', 'Costa Rica'))\n\nscores &lt;- data %&gt;% \n  filter(home_team %in% america_2024 & away_team %in% america_2024) %&gt;% \n  filter(date &gt; \"2023-01-01\") %&gt;% \n  mutate(id = row_number())\n\nFor example, we consider the following games played by Portugal\n\nscores %&gt;% \n  filter(home_team == \"Colombia\" | away_team == \"Colombia\")\n\n# A tibble: 13 × 10\n   date       home_team away_team home_score away_score tournament city  country\n   &lt;date&gt;     &lt;chr&gt;     &lt;chr&gt;          &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt; &lt;chr&gt;  \n 1 2023-01-28 United S… Colombia           0          0 Friendly   Cars… United…\n 2 2023-09-07 Colombia  Venezuela          1          0 FIFA Worl… Barr… Colomb…\n 3 2023-09-12 Chile     Colombia           0          0 FIFA Worl… Sant… Chile  \n 4 2023-10-12 Colombia  Uruguay            2          2 FIFA Worl… Barr… Colomb…\n 5 2023-10-17 Ecuador   Colombia           0          0 FIFA Worl… Quito Ecuador\n 6 2023-11-16 Colombia  Brazil             2          1 FIFA Worl… Barr… Colomb…\n 7 2023-11-21 Paraguay  Colombia           0          1 FIFA Worl… Asun… Paragu…\n 8 2023-12-16 Mexico    Colombia           2          3 Friendly   Los … United…\n 9 2024-06-08 United S… Colombia           1          5 Friendly   Land… United…\n10 2024-06-15 Colombia  Bolivia            3          0 Friendly   Denv… United…\n11 2024-06-24 Colombia  Paraguay           2          1 Copa Amér… Hous… United…\n12 2024-06-28 Colombia  Costa Ri…         NA         NA Copa Amér… Glen… United…\n13 2024-07-02 Brazil    Colombia          NA         NA Copa Amér… Sant… United…\n# ℹ 2 more variables: neutral &lt;lgl&gt;, id &lt;int&gt;\n\n\n\nhome_scores &lt;- scores %&gt;% \n  select(id, score = home_score, team = home_team, adversary = away_team, date = date) %&gt;% \n  mutate(condition = ifelse(scores$neutral, \"neutral\", \"home\"))\n  \naway_scores &lt;- scores %&gt;% \n  select(id, score = away_score, team = away_team, adversary = home_team, date = date) %&gt;% \n  mutate(condition = ifelse(scores$neutral, \"neutral\", \"away\"))\n\ntotal_scores &lt;- union_all(home_scores, away_scores)\n\nWe also consider the ranking FIFA of the teams as covariate. For every game, select the up-to-date ranking\n\npath0 &lt;- \"https://raw.githubusercontent.com/Dato-Futbol/fifa-ranking/master/ranking_fifa_historical.csv\"\nrank &lt;- read_csv(url(path0), show_col_types = FALSE)\n\nrank &lt;- rank %&gt;% \n  select(team, total_points, date) %&gt;% \n  group_by(date) %&gt;% \n  mutate(ranking = rank(-total_points), team = recode(team, 'USA'='United States'))\n\n\ntotal_scores &lt;- total_scores %&gt;% \n  left_join(rank, by = join_by(adversary == team), relationship = \"many-to-many\") %&gt;% \n  filter(date.x &gt;= date.y) %&gt;% \n  mutate(diff_date = date.x - date.y) %&gt;% \n  group_by(id, team) %&gt;% \n  slice_min(diff_date) %&gt;% \n  select(id, score, team, adversary, condition, date_game = date.x, ranking_adv = ranking, date_rank = date.y)\n\ntrain &lt;- total_scores %&gt;% \n  filter(date_game &lt;= today())\n\ntest &lt;- total_scores %&gt;% \n  filter(date_game &gt; today())"
  },
  {
    "objectID": "projects/copaamerica_2024.html#fitting-the-model",
    "href": "projects/copaamerica_2024.html#fitting-the-model",
    "title": "Predicting Copa América - 2024",
    "section": "Fitting the model",
    "text": "Fitting the model\nTo fit the model I would consider the scores Neg. Binomial distributed for simplicity, one better option is the Conway-Maxwell-Poisson. However, we will use a simple model for computational reasons.\n\nmodel &lt;- stan_glm(score ~ 1 + team + adversary + condition + ranking_adv, data = train, family = poisson, iter = 5000, contrasts = list(team = \"contr.sum\", adversary = \"contr.sum\"))\n\n\nEstimated Parameters\n\nn &lt;- length(america_2024)\nstrength_att &lt;- model$coefficients[2:n]\nstrength_att &lt;- c(strength_att, 0 - sum(strength_att))\n\nstrength_def &lt;- model$coefficients[(n+1):(2*n-1)]\nstrength_def &lt;- c(strength_def, 0 - sum(strength_def))\n\ncoeffs &lt;- data.frame(team = america_2024, strength_att, strength_def, row.names = c())\n\nNow, we can plot the estimated strengths in the following way:\n\nggplot(coeffs, aes(x = strength_att, y = -strength_def)) +\n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"grey50\") +\n  geom_vline(xintercept = 0, linetype = \"dashed\", color = \"grey50\") +\n  geom_point() +\n  geom_label_repel(aes(label = team),\n                            box.padding = 0.25,\n                            point.padding = 0.5,\n                            segment.color = \"grey50\") +\n  xlab(expression(\"Better Attack\" %-&gt;% \"\")) +\n  ylab(expression(\"Better Defense\" %-&gt;% \"\")) + \n  ggtitle(\"Strengths of every team\") + \n  theme_classic() +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\n\nThis graph provides an intuition into the strengths and abilities of every team. Teams located in the origin have an overall performance, and below the axis are worse than the averages’ team.\nNow, we predict the scores of the future games:\n\ntest_pred &lt;- test %&gt;% \n  select(id, team, adversary, condition, ranking_adv)\npredictions &lt;- posterior_predict(model, newdata = test_pred) \nmean_goals &lt;- apply(predictions, 2, mean)\n\ntest_pred &lt;- test_pred %&gt;% \n  ungroup() %&gt;% \n  mutate(goals = mean_goals) %&gt;% \n  group_by(id) %&gt;% \n  summarise(\"Team 1\" = first(team),\n            \"Exp. Goals\" = first(goals),\n            \"Team 2\" = last(team),\n            \"Exp. Goals 2\" = last(goals)) \n\nTherefore the predictions of future games are:"
  },
  {
    "objectID": "projects/copaamerica_2024.html#predictions",
    "href": "projects/copaamerica_2024.html#predictions",
    "title": "Predicting Copa América - 2024",
    "section": "Predictions",
    "text": "Predictions\n\ntest_pred %&gt;% \n  print(n = 1e3)\n\n# A tibble: 8 × 5\n     id `Team 1`      `Exp. Goals` `Team 2`  `Exp. Goals 2`\n  &lt;int&gt; &lt;chr&gt;                &lt;dbl&gt; &lt;chr&gt;              &lt;dbl&gt;\n1    90 Argentina            1.21  Peru              0.0406\n2    91 Canada               0.811 Chile             1.18  \n3    92 Ecuador              1.52  Mexico            0.962 \n4    93 Jamaica              0.414 Venezuela         2.28  \n5    94 United States        0.825 Uruguay           1.86  \n6    95 Bolivia              0.858 Panama            1.06  \n7    96 Brazil               0.974 Colombia          1.65  \n8    97 Costa Rica           0.347 Paraguay          0.676"
  },
  {
    "objectID": "index.html#skills",
    "href": "index.html#skills",
    "title": "Mauro Florez",
    "section": "Skills",
    "text": "Skills\n\n\nProgramming\n\nR\nPython\nSQL\nMatlab\nTableau\nLatex\nMS Office\n\n\n\n\n\n\n\nCertifications\n\nR Developer. Certificate from DataCamp (DataCamp, 2024) [Certificate]\nApplied Data Science with Python Specialization. Certificate from University of Michigan (Coursera, 2019) [Certificate]"
  },
  {
    "objectID": "index.html#skills-software",
    "href": "index.html#skills-software",
    "title": "Mauro Florez",
    "section": "Skills & Software",
    "text": "Skills & Software\n\n\nR,"
  },
  {
    "objectID": "index.html#certifications",
    "href": "index.html#certifications",
    "title": "Mauro Florez",
    "section": "Certifications",
    "text": "Certifications\n\nR Developer. Certificate from DataCamp (DataCamp, 2024) [Certificate]\nApplied Data Science with Python Specialization. Certificate from University of Michigan (Coursera, 2019) [Certificate]"
  },
  {
    "objectID": "index.html#additional",
    "href": "index.html#additional",
    "title": "Mauro Florez",
    "section": "Additional",
    "text": "Additional"
  },
  {
    "objectID": "index.html#column-width30",
    "href": "index.html#column-width30",
    "title": "Mauro Florez",
    "section": "{.column width=“30%”}:",
    "text": "{.column width=“30%”}:"
  },
  {
    "objectID": "index.html#software",
    "href": "index.html#software",
    "title": "Mauro Florez",
    "section": "Software",
    "text": "Software\n\nR\nPython\nSQL\nMatlab\nTableau\nLatex\nGit\nMS Office"
  },
  {
    "objectID": "projects/euro_2024.html#estimattion",
    "href": "projects/euro_2024.html#estimattion",
    "title": "Predicting Euro & Copa America - 2024",
    "section": "Estimattion",
    "text": "Estimattion\n\nEuro\n\nstrength_att &lt;- model_euro$coefficients[2:24]\nstrength_att &lt;- c(strength_att, 0 - sum(strength_att))\n\nstrength_def &lt;- model_euro$coefficients[25:47]\nstrength_def &lt;- c(strength_def, 0 - sum(strength_def))\n\ncoeffs &lt;- data.frame(team = euro_2024, strength_att, strength_def, row.names = c())\n\nNow, we can plot the estimated strengths in the following way:\n\nggplot(coeffs, aes(x = strength_att, y = -strength_def)) +\n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"grey50\") +\n  geom_vline(xintercept = 0, linetype = \"dashed\", color = \"grey50\") +\n  geom_point() +\n  geom_label_repel(aes(label = team),\n                            box.padding = 0.25,\n                            point.padding = 0.5,\n                            segment.color = \"grey50\") +\n  xlab(expression(\"Better Attack\" %-&gt;% \"\")) +\n  ylab(expression(\"Better Defense\" %-&gt;% \"\")) + \n  ggtitle(\"Strengths of every team\") + \n  theme_classic() +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\n\nThis graph provides an intuition into the strengths and abilities of every team. Teams located in the origin have an overall performance, and below the axis are worse than the averages’ team.\n\n\nCopa America\nSimilarly for Copa america\n\nn &lt;- length(america_2024)\nstrength_att &lt;- model_america$coefficients[2:n]\nstrength_att &lt;- c(strength_att, 0 - sum(strength_att))\n\nstrength_def &lt;- model_america$coefficients[(n+1):(2*n-1)]\nstrength_def &lt;- c(strength_def, 0 - sum(strength_def))\n\ncoeffs &lt;- data.frame(team = america_2024, strength_att, strength_def, row.names = c())\n\nNow, we can plot the estimated strengths in the following way:\n\nggplot(coeffs, aes(x = strength_att, y = -strength_def)) +\n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"grey50\") +\n  geom_vline(xintercept = 0, linetype = \"dashed\", color = \"grey50\") +\n  geom_point() +\n  geom_label_repel(aes(label = team),\n                            box.padding = 0.25,\n                            point.padding = 0.5,\n                            segment.color = \"grey50\") +\n  xlab(expression(\"Better Attack\" %-&gt;% \"\")) +\n  ylab(expression(\"Better Defense\" %-&gt;% \"\")) + \n  ggtitle(\"Strengths of every team\") + \n  theme_classic() +\n  theme(plot.title = element_text(hjust = 0.5))"
  }
]