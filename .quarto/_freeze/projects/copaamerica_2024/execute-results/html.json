{
  "hash": "411816e4d9187f0ef09299494ab2beaa",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Predicting Copa América - 2024\n---\n\n\nIn this project, I will propose a model to predict the scores in the Euro 2024.\n\n## Packages\n\nI will use a Bayesian model, so we need the following libraries\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrequire(rstanarm)\nrequire(rstantools)\nrequire(bayesplot)\n```\n:::\n\n\nAs well as\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrequire(readr)\nrequire(dplyr)\nrequire(lubridate)\nrequire(ggplot2)\nrequire(ggrepel)\nrequire(latex2exp)\n```\n:::\n\n\n## Data\n\nThe data is contained in this repository <https://github.com/martj42/international_results>.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurlfile = \"https://raw.githubusercontent.com/martj42/international_results/master/results.csv\"\n```\n:::\n\n\nWe load the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- read_csv(url(urlfile), show_col_types = FALSE)\n```\n:::\n\n\nThe proposed model is based on the teams' strengths attacking and defending. Therefore, we will consider only the games played during 2024. An improved model would be one with dynamic strengths.\n\n\n::: {.cell}\n\n```{.r .cell-code}\namerica_2024 = sort(c('Argentina', 'Chile', 'Peru', 'Canada', 'Mexico', 'Ecuador', 'Venezuela', 'Jamaica', 'United States', 'Uruguay', 'Panama', 'Bolivia', 'Brazil', 'Colombia', 'Paraguay', 'Costa Rica'))\n\nscores <- data %>% \n  filter(home_team %in% america_2024 & away_team %in% america_2024) %>% \n  filter(date > \"2023-01-01\") %>% \n  mutate(id = row_number())\n```\n:::\n\n\nFor example, we consider the following games played by Portugal\n\n\n::: {.cell}\n\n```{.r .cell-code}\nscores %>% \n  filter(home_team == \"Colombia\" | away_team == \"Colombia\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 13 × 10\n   date       home_team away_team home_score away_score tournament city  country\n   <date>     <chr>     <chr>          <dbl>      <dbl> <chr>      <chr> <chr>  \n 1 2023-01-28 United S… Colombia           0          0 Friendly   Cars… United…\n 2 2023-09-07 Colombia  Venezuela          1          0 FIFA Worl… Barr… Colomb…\n 3 2023-09-12 Chile     Colombia           0          0 FIFA Worl… Sant… Chile  \n 4 2023-10-12 Colombia  Uruguay            2          2 FIFA Worl… Barr… Colomb…\n 5 2023-10-17 Ecuador   Colombia           0          0 FIFA Worl… Quito Ecuador\n 6 2023-11-16 Colombia  Brazil             2          1 FIFA Worl… Barr… Colomb…\n 7 2023-11-21 Paraguay  Colombia           0          1 FIFA Worl… Asun… Paragu…\n 8 2023-12-16 Mexico    Colombia           2          3 Friendly   Los … United…\n 9 2024-06-08 United S… Colombia           1          5 Friendly   Land… United…\n10 2024-06-15 Colombia  Bolivia            3          0 Friendly   Denv… United…\n11 2024-06-24 Colombia  Paraguay           2          1 Copa Amér… Hous… United…\n12 2024-06-28 Colombia  Costa Ri…         NA         NA Copa Amér… Glen… United…\n13 2024-07-02 Brazil    Colombia          NA         NA Copa Amér… Sant… United…\n# ℹ 2 more variables: neutral <lgl>, id <int>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhome_scores <- scores %>% \n  select(id, score = home_score, team = home_team, adversary = away_team, date = date) %>% \n  mutate(condition = ifelse(scores$neutral, \"neutral\", \"home\"))\n  \naway_scores <- scores %>% \n  select(id, score = away_score, team = away_team, adversary = home_team, date = date) %>% \n  mutate(condition = ifelse(scores$neutral, \"neutral\", \"away\"))\n\ntotal_scores <- union_all(home_scores, away_scores)\n```\n:::\n\n\nWe also consider the ranking FIFA of the teams as covariate. For every game, select the up-to-date ranking\n\n\n::: {.cell}\n\n```{.r .cell-code}\npath0 <- \"https://raw.githubusercontent.com/Dato-Futbol/fifa-ranking/master/ranking_fifa_historical.csv\"\nrank <- read_csv(url(path0), show_col_types = FALSE)\n\nrank <- rank %>% \n  select(team, total_points, date) %>% \n  group_by(date) %>% \n  mutate(ranking = rank(-total_points), team = recode(team, 'USA'='United States'))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntotal_scores <- total_scores %>% \n  left_join(rank, by = join_by(adversary == team), relationship = \"many-to-many\") %>% \n  filter(date.x >= date.y) %>% \n  mutate(diff_date = date.x - date.y) %>% \n  group_by(id, team) %>% \n  slice_min(diff_date) %>% \n  select(id, score, team, adversary, condition, date_game = date.x, ranking_adv = ranking, date_rank = date.y)\n\ntrain <- total_scores %>% \n  filter(date_game <= today())\n\ntest <- total_scores %>% \n  filter(date_game > today())\n```\n:::\n\n\n## Fitting the model\n\nTo fit the model I would consider the scores Neg. Binomial distributed for simplicity, one better option is the Conway-Maxwell-Poisson. However, we will use a simple model for computational reasons.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel <- stan_glm(score ~ 1 + team + adversary + condition + ranking_adv, data = train, family = poisson, iter = 5000, contrasts = list(team = \"contr.sum\", adversary = \"contr.sum\"))\n```\n:::\n\n\n### Estimated Parameters\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn <- length(america_2024)\nstrength_att <- model$coefficients[2:n]\nstrength_att <- c(strength_att, 0 - sum(strength_att))\n\nstrength_def <- model$coefficients[(n+1):(2*n-1)]\nstrength_def <- c(strength_def, 0 - sum(strength_def))\n\ncoeffs <- data.frame(team = america_2024, strength_att, strength_def, row.names = c())\n```\n:::\n\n\nNow, we can plot the estimated strengths in the following way:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(coeffs, aes(x = strength_att, y = -strength_def)) +\n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"grey50\") +\n  geom_vline(xintercept = 0, linetype = \"dashed\", color = \"grey50\") +\n  geom_point() +\n  geom_label_repel(aes(label = team),\n                            box.padding = 0.25,\n                            point.padding = 0.5,\n                            segment.color = \"grey50\") +\n  xlab(expression(\"Better Attack\" %->% \"\")) +\n  ylab(expression(\"Better Defense\" %->% \"\")) + \n  ggtitle(\"Strengths of every team\") + \n  theme_classic() +\n  theme(plot.title = element_text(hjust = 0.5))\n```\n\n::: {.cell-output-display}\n![](copaamerica_2024_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\nThis graph provides an intuition into the strengths and abilities of every team. Teams located in the origin have an overall performance, and below the axis are worse than the averages' team.\n\nNow, we predict the scores of the future games:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_pred <- test %>% \n  select(id, team, adversary, condition, ranking_adv)\npredictions <- posterior_predict(model, newdata = test_pred) \nmean_goals <- apply(predictions, 2, mean)\n\ntest_pred <- test_pred %>% \n  ungroup() %>% \n  mutate(goals = mean_goals) %>% \n  group_by(id) %>% \n  summarise(\"Team 1\" = first(team),\n            \"Exp. Goals\" = first(goals),\n            \"Team 2\" = last(team),\n            \"Exp. Goals 2\" = last(goals)) \n```\n:::\n\n\nTherefore the predictions of future games are:\n\n## Predictions\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_pred %>% \n  print(n = 1e3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8 × 5\n     id `Team 1`      `Exp. Goals` `Team 2`  `Exp. Goals 2`\n  <int> <chr>                <dbl> <chr>              <dbl>\n1    90 Argentina            1.21  Peru              0.0406\n2    91 Canada               0.811 Chile             1.18  \n3    92 Ecuador              1.52  Mexico            0.962 \n4    93 Jamaica              0.414 Venezuela         2.28  \n5    94 United States        0.825 Uruguay           1.86  \n6    95 Bolivia              0.858 Panama            1.06  \n7    96 Brazil               0.974 Colombia          1.65  \n8    97 Costa Rica           0.347 Paraguay          0.676 \n```\n\n\n:::\n:::\n",
    "supporting": [
      "copaamerica_2024_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}