{
  "hash": "2cb7bdabeb47c0ca1bf5a0b205f6a141",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Predicting Euro & Copa America - 2024\ndescription: A statistical model to analyze the results of the Euro Cup and the Copa America 2024.\nauthor: \n  - name: Mauro Florez\n  - email: mf53@rice.edu\ndate: 2024-06-30\nimage: copa_america.jpg\nbibliography: references.bib\n---\n\n\n\nIn this project, I will propose a model for predicting the Euro & Copa America - 2024 scores based on the model presented in [@florez2024].\n\n## Packages\n\nI will use a Bayesian model, so we need the following libraries\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrequire(rstanarm)\nrequire(rstantools)\nrequire(bayesplot)\n```\n:::\n\n\n\nAs well as\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrequire(readr)\nrequire(dplyr)\nrequire(lubridate)\nrequire(ggplot2)\nrequire(ggrepel)\nrequire(latex2exp)\n```\n:::\n\n\n\n## Data\n\nThe data is contained in this repository <https://github.com/martj42/international_results>.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurlfile = \"https://raw.githubusercontent.com/martj42/international_results/master/results.csv\"\n```\n:::\n\n\n\nWe load the data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- read_csv(url(urlfile), show_col_types = FALSE)\n```\n:::\n\n\n\nThe proposed model is based on the teams' strengths attacking and defending. To train the model, we used the scores of games played since season 2023-2024.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\neuro_2024 = c('Albania','Austria','Belgium','Croatia','Czech Republic','Denmark','England','France','Georgia','Germany','Hungary','Italy','Netherlands','Poland','Portugal','Romania','Scotland','Serbia','Slovakia','Slovenia','Spain','Switzerland','Turkey','Ukraine')\n\namerica_2024 = sort(c('Argentina', 'Chile', 'Peru', 'Canada', 'Mexico', 'Ecuador', 'Venezuela', 'Jamaica', 'United States', 'Uruguay', 'Panama', 'Bolivia', 'Brazil', 'Colombia', 'Paraguay', 'Costa Rica'))  \n\nscores <- data %>% \n  filter(home_team %in% euro_2024 & away_team %in% euro_2024) %>% \n  filter(date > \"2023-06-01\") %>% \n  mutate(id = row_number(), cup = \"Euro\") %>% \n  bind_rows(data %>% \n  filter(home_team %in% america_2024 & away_team %in% america_2024) %>% \n  filter(date > \"2023-06-01\") %>% \n  mutate(id = row_number(), cup = \"America\")\n  )\n```\n:::\n\n\n\nFor example, we consider the following games played by Portugal.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nscores %>% \n  filter(home_team == \"Portugal\" | away_team == \"Portugal\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 19 × 11\n   date       home_team away_team home_score away_score tournament city  country\n   <date>     <chr>     <chr>          <dbl>      <dbl> <chr>      <chr> <chr>  \n 1 2023-09-08 Slovakia  Portugal           0          1 UEFA Euro… Brat… Slovak…\n 2 2023-10-13 Portugal  Slovakia           3          2 UEFA Euro… Porto Portug…\n 3 2024-03-26 Slovenia  Portugal           2          0 Friendly   Ljub… Sloven…\n 4 2024-06-08 Portugal  Croatia            1          2 Friendly   Oeir… Portug…\n 5 2024-06-18 Portugal  Czech Re…          2          1 UEFA Euro  Leip… Germany\n 6 2024-06-22 Turkey    Portugal           0          3 UEFA Euro  Dort… Germany\n 7 2024-06-26 Georgia   Portugal           2          0 UEFA Euro  Gels… Germany\n 8 2024-07-01 Portugal  Slovenia           0          0 UEFA Euro  Fran… Germany\n 9 2024-07-05 Portugal  France             0          0 UEFA Euro  Hamb… Germany\n10 2024-09-05 Portugal  Croatia            2          1 UEFA Nati… Lisb… Portug…\n11 2024-09-08 Portugal  Scotland           2          1 UEFA Nati… Lisb… Portug…\n12 2024-10-12 Poland    Portugal           1          3 UEFA Nati… Wars… Poland \n13 2024-10-15 Scotland  Portugal           0          0 UEFA Nati… Glas… Scotla…\n14 2024-11-15 Portugal  Poland             5          1 UEFA Nati… Porto Portug…\n15 2024-11-18 Croatia   Portugal           1          1 UEFA Nati… Split Croatia\n16 2025-03-20 Denmark   Portugal           1          0 UEFA Nati… Cope… Denmark\n17 2025-03-23 Portugal  Denmark            5          2 UEFA Nati… Lisb… Portug…\n18 2025-06-04 Germany   Portugal           1          2 UEFA Nati… Muni… Germany\n19 2025-06-08 Portugal  Spain              2          2 UEFA Nati… Muni… Germany\n# ℹ 3 more variables: neutral <lgl>, id <int>, cup <chr>\n```\n\n\n:::\n:::\n\n\n\nand the following games played by Colombia\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nscores %>% \n  filter(home_team == \"Colombia\" | away_team == \"Colombia\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 25 × 11\n   date       home_team away_team home_score away_score tournament city  country\n   <date>     <chr>     <chr>          <dbl>      <dbl> <chr>      <chr> <chr>  \n 1 2023-09-07 Colombia  Venezuela          1          0 FIFA Worl… Barr… Colomb…\n 2 2023-09-12 Chile     Colombia           0          0 FIFA Worl… Sant… Chile  \n 3 2023-10-12 Colombia  Uruguay            2          2 FIFA Worl… Barr… Colomb…\n 4 2023-10-17 Ecuador   Colombia           0          0 FIFA Worl… Quito Ecuador\n 5 2023-11-16 Colombia  Brazil             2          1 FIFA Worl… Barr… Colomb…\n 6 2023-11-21 Paraguay  Colombia           0          1 FIFA Worl… Asun… Paragu…\n 7 2023-12-16 Mexico    Colombia           2          3 Friendly   Los … United…\n 8 2024-06-08 United S… Colombia           1          5 Friendly   Land… United…\n 9 2024-06-15 Colombia  Bolivia            3          0 Friendly   Denv… United…\n10 2024-06-24 Colombia  Paraguay           2          1 Copa Amér… Hous… United…\n# ℹ 15 more rows\n# ℹ 3 more variables: neutral <lgl>, id <int>, cup <chr>\n```\n\n\n:::\n:::\n\n\n\n### Filtering data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhome_scores <- scores %>% \n  select(id, score = home_score, team = home_team, adversary = away_team, date = date, cup) %>% \n  mutate(condition = ifelse(scores$neutral, \"neutral\", \"home\"))\n  \naway_scores <- scores %>% \n  select(id, score = away_score, team = away_team, adversary = home_team, date = date, cup) %>% \n  mutate(condition = ifelse(scores$neutral, \"neutral\", \"away\"))\n\ntotal_scores <- union_all(home_scores, away_scores)\n```\n:::\n\n\n\nWe also consider the ranking FIFA of the teams as covariate. For every game, select the up-to-date ranking\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npath0 <- \"https://raw.githubusercontent.com/Dato-Futbol/fifa-ranking/master/ranking_fifa_historical.csv\"\nrank <- read_csv(url(path0), show_col_types = FALSE)\n\nrank <- rank %>% \n  select(team, total_points, date) %>% \n  group_by(date) %>% \n  mutate(ranking = rank(-total_points))\n```\n:::\n\n\n\nMerging the data will be\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nscores_rank <- total_scores %>% \n  left_join(rank, by = join_by(adversary == team), relationship = \"many-to-many\") %>% \n  filter(date.x >= date.y) %>% \n  mutate(diff_date = date.x - date.y) %>% \n  group_by(id, team) %>% \n  slice_min(diff_date) %>% \n  select(id, score, team, adversary, condition, date_game = date.x, ranking_adv = ranking, date_rank = date.y, cup)\n```\n:::\n\n\n\nWe are separating the data for both Euro and Copa America. For both cases, we will use as test data the games played after the quarter-finals. i.e, we will finish predicting the results of the semi-finals and the finals.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndate_euro = \"2024-07-09\"\ndate_ca = \"2024-07-09\"\n\ntrain_euro <- scores_rank %>% \n  filter(date_game < date_euro, cup == \"Euro\")\n\ntrain_america <- scores_rank %>% \n  filter(date_game < date_ca, cup == \"America\")\n\ntest_euro <- scores_rank %>% \n  filter(date_game >= date_euro, cup == \"Euro\")\n\ntest_america <- scores_rank %>% \n  filter(date_game >= date_ca, cup == \"America\")\n```\n:::\n\n\n\n## Fitting the model\n\nTo fit the model I would consider the scores are distributed as Poisson for simplicity, one better option is the Conway-Maxwell-Poisson as shown in [@florez2024]. However, we will use a simple model for computational reasons as we constantly update the model.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_euro <- stan_glm(score ~ 1 + team + adversary + condition + ranking_adv, data = train_euro, family = poisson, iter = 5000, contrasts = list(team = \"contr.sum\", adversary = \"contr.sum\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_america <- stan_glm(score ~ 1 + team + adversary + condition + ranking_adv, data = train_america, family = poisson, iter = 5000, contrasts = list(team = \"contr.sum\", adversary = \"contr.sum\"))\n```\n:::\n\n\n\n## Estimation\n\n### Euro\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstrength_att <- model_euro$coefficients[2:24]\nstrength_att <- c(strength_att, 0 - sum(strength_att))\n\nstrength_def <- model_euro$coefficients[25:47]\nstrength_def <- c(strength_def, 0 - sum(strength_def))\n\ncoeffs <- data.frame(team = euro_2024, strength_att, strength_def, row.names = c())\n```\n:::\n\n\n\nNow, we can plot the estimated strengths in the following way:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(coeffs, aes(x = strength_att, y = -strength_def)) +\n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"grey50\") +\n  geom_vline(xintercept = 0, linetype = \"dashed\", color = \"grey50\") +\n  geom_point() +\n  geom_label_repel(aes(label = team),\n                            box.padding = 0.25,\n                            point.padding = 0.5,\n                            segment.color = \"grey50\") +\n  xlab(expression(\"Better Attack\" %->% \"\")) +\n  ylab(expression(\"Better Defense\" %->% \"\")) + \n  ggtitle(\"Strengths of every team\") + \n  theme_classic() +\n  theme(plot.title = element_text(hjust = 0.5))\n```\n\n::: {.cell-output-display}\n![](euro_2024_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n\nThis graph provides an intuition into the strengths and abilities of every team. Teams located in the origin have an overall performance, and below the axis are worse than the averages' team.\n\n### Copa America\n\nSimilarly for Copa america\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn <- length(america_2024)\nstrength_att <- model_america$coefficients[2:n]\nstrength_att <- c(strength_att, 0 - sum(strength_att))\n\nstrength_def <- model_america$coefficients[(n+1):(2*n-1)]\nstrength_def <- c(strength_def, 0 - sum(strength_def))\n\ncoeffs <- data.frame(team = america_2024, strength_att, strength_def, row.names = c())\n```\n:::\n\n\n\nNow, we can plot the estimated strengths in the following way:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(coeffs, aes(x = strength_att, y = -strength_def)) +\n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"grey50\") +\n  geom_vline(xintercept = 0, linetype = \"dashed\", color = \"grey50\") +\n  geom_point() +\n  geom_label_repel(aes(label = team),\n                            box.padding = 0.25,\n                            point.padding = 0.5,\n                            segment.color = \"grey50\") +\n  xlab(expression(\"Better Attack\" %->% \"\")) +\n  ylab(expression(\"Better Defense\" %->% \"\")) + \n  ggtitle(\"Strengths of every team\") + \n  theme_classic() +\n  theme(plot.title = element_text(hjust = 0.5))\n```\n\n::: {.cell-output-display}\n![](euro_2024_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n\n## Predictions\n\n### Euro\n\nNow, we predict the scores of the future games, i.e, the semifinals and the final.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_pred <- test_euro %>% \n  select(id, team, adversary, condition, ranking_adv)\n\npredictions <- posterior_predict(model_euro, newdata = test_pred) \n\nmean_goals <- apply(predictions, 2, mean)\n\ntest_pred <- test_pred %>% \n  ungroup() %>% \n  mutate(goals = mean_goals) %>% \n  group_by(id) %>% \n  summarise(\"Team 1\" = first(team),\n            \"Exp. Goals\" = first(goals),\n            \"Team 2\" = last(team),\n            \"Exp. Goals 2\" = last(goals)) \n```\n:::\n\n\n\nThe predictions of future games are:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_pred %>% \n  print(n = 1e3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 77 × 5\n      id `Team 1`       `Exp. Goals` `Team 2`       `Exp. Goals 2`\n   <int> <chr>                 <dbl> <chr>                   <dbl>\n 1   103 France                0.402 Spain                   0.842\n 2   104 England               1.89  Netherlands             1.60 \n 3   105 England               0.626 Spain                   1.53 \n 4   106 Croatia               1.53  Portugal                1.30 \n 5   107 Poland                2.16  Scotland                0.940\n 6   108 Denmark               0.748 Switzerland             0.941\n 7   109 Serbia                0.359 Spain                   1.88 \n 8   110 France                1.29  Italy                   0.644\n 9   111 Austria               1.86  Slovenia                1.32 \n10   112 Germany               2.17  Hungary                 0.889\n11   113 Czech Republic        1.81  Georgia                 1.88 \n12   114 Albania               1.38  Ukraine                 0.789\n13   115 Portugal              2.26  Scotland                0.754\n14   116 Croatia               1.95  Poland                  1.24 \n15   117 Denmark               1.08  Serbia                  0.487\n16   118 Spain                 1.30  Switzerland             0.669\n17   119 Belgium               0.669 France                  0.835\n18   120 Germany               2.02  Netherlands             2.01 \n19   121 Albania               4.40  Georgia                 1.18 \n20   122 Czech Republic        1.09  Ukraine                 1.38 \n21   123 Belgium               1.12  Italy                   0.858\n22   124 Hungary               1.74  Netherlands             2.43 \n23   125 Albania               1.92  Czech Republic          0.864\n24   126 Georgia               1.09  Ukraine                 1.97 \n25   127 Croatia               3.50  Scotland                0.75 \n26   128 Poland                1.46  Portugal                1.12 \n27   129 Serbia                0.532 Switzerland             1.20 \n28   130 Denmark               0.433 Spain                   1.75 \n29   131 Belgium               0.808 France                  0.715\n30   132 Germany               2.40  Netherlands             1.67 \n31   133 Albania               3.84  Georgia                 1.40 \n32   134 Czech Republic        0.709 Ukraine                 1.07 \n33   135 Portugal              2.10  Scotland                0.891\n34   136 Croatia               1.61  Poland                  1.46 \n35   137 Serbia                0.307 Spain                   2.24 \n36   138 Denmark               0.619 Switzerland             1.08 \n37   139 Belgium               1.34  Italy                   0.712\n38   140 Poland                1.24  Portugal                1.36 \n39   141 Croatia               2.95  Scotland                0.921\n40   142 Denmark               0.523 Spain                   1.47 \n41   143 Serbia                0.446 Switzerland             1.42 \n42   144 Hungary               1.42  Netherlands             2.90 \n43   145 Albania               2.27  Czech Republic          0.713\n44   146 Georgia               1.70  Ukraine                 2.59 \n45   147 France                1.08  Italy                   0.793\n46   148 Austria               2.21  Slovenia                1.12 \n47   149 Croatia               1.84  Portugal                1.11 \n48   150 Poland                2.70  Scotland                0.791\n49   151 Denmark               0.933 Serbia                  0.590\n50   152 Spain                 1.53  Switzerland             0.555\n51   153 Germany               1.84  Hungary                 1.07 \n52   154 Albania               2.21  Ukraine                 1.04 \n53   155 Czech Republic        2.26  Georgia                 1.54 \n54   156 Croatia               1.06  France                  1.18 \n55   157 Denmark               1.17  Portugal                0.845\n56   158 Germany               1.46  Italy                   1.18 \n57   159 Netherlands           1.07  Spain                   2.56 \n58   160 Austria               2.66  Serbia                  0.661\n59   161 Hungary               1.24  Turkey                  1.80 \n60   162 Belgium               1.04  Ukraine                 0.511\n61   163 Slovakia              0.914 Slovenia                1.38 \n62   164 Albania               1.63  England                 2.12 \n63   165 Croatia               0.888 France                  1.41 \n64   166 Germany               1.71  Italy                   0.989\n65   167 Denmark               1.00  Portugal                0.986\n66   168 Netherlands           0.903 Spain                   3.08 \n67   169 Belgium               1.62  Ukraine                 0.641\n68   170 Hungary               1.49  Turkey                  1.48 \n69   171 Austria               2.26  Serbia                  0.787\n70   172 Slovakia              0.753 Slovenia                1.65 \n71   173 Germany               1.85  Portugal                0.906\n72   174 France                0.401 Spain                   0.838\n73   175 Austria               3.41  Romania                 1.53 \n74   176 Albania               1.86  Serbia                  0.633\n75   177 France                0.934 Germany                 1.04 \n76   178 Portugal              0.360 Spain                   1.51 \n77   179 Croatia               2.38  Czech Republic          0.825\n```\n\n\n:::\n:::\n\n\n\nParticullarly, the distribution of the prediction of the score for the final looks as shown below.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nresults_game <- tibble(\"England\" = predictions[,5], \"Spain\" = predictions[,6])\n\ndf_count <- results_game %>% \n  group_by(England, Spain) %>% \n  summarise(count = n(), .groups = \"keep\") %>% \n  ungroup()\n\ntotal_combinations <- nrow(results_game)\n\ndf_count <- df_count %>% \n    mutate(proportion = count/total_combinations)\n  \nggplot(df_count, aes(x = England, y = Spain, fill = proportion)) +\n  geom_tile() + \n  scale_fill_gradient(low = \"white\", high = \"blue\") + \n  labs(title = \"Heatmap of Goals Scored by the two teams\",\n       x = \"England\", \n       y = \"Spain\",\n       fill = \"Probability\") + \n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](euro_2024_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n\nAccording to this, it is likely that the final will be Spain vs. England. **Spain is expected to be the champion, with a predicted score of 2-0.**\n\n### Copa America\n\nSimilarly, we can generate the predictions for the last round of the games in Copa América\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_pred <- test_america %>% \n  select(id, team, adversary, condition, ranking_adv)\n\npredictions <- posterior_predict(model_america, newdata = test_pred) \n\nmean_goals <- apply(predictions, 2, mean)\n\ntest_pred <- test_pred %>% \n  ungroup() %>% \n  mutate(goals = mean_goals) %>% \n  group_by(id) %>% \n  summarise(\"Team 1\" = first(team),\n            \"Exp. Goals\" = first(goals),\n            \"Team 2\" = last(team),\n            \"Exp. Goals 2\" = last(goals)) \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_pred %>% \n  print(n = 1e3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 70 × 5\n      id `Team 1`      `Exp. Goals` `Team 2`      `Exp. Goals 2`\n   <int> <chr>                <dbl> <chr>                  <dbl>\n 1    96 Argentina           1.92   Canada                0.416 \n 2    97 Colombia            0.874  Uruguay               1.34  \n 3    98 Canada              0.498  Uruguay               2.57  \n 4    99 Argentina           1.03   Colombia              0.766 \n 5   100 Bolivia             0.554  Venezuela             1.62  \n 6   101 Argentina           1.09   Chile                 0.171 \n 7   102 Colombia            1.25   Peru                  0.109 \n 8   103 Paraguay            0.171  Uruguay               2.29  \n 9   104 Brazil              1.58   Ecuador               0.728 \n10   105 United States       2.06   United States         2.06  \n11   106 Canada              1.01   Mexico                1.80  \n12   107 Argentina           0.888  Colombia              0.932 \n13   108 Ecuador             1.26   Peru                  0.0765\n14   109 Bolivia             0.258  Chile                 1.11  \n15   110 Uruguay             1.33   Venezuela             0.754 \n16   111 Brazil              1.17   Paraguay              0.405 \n17   112 Bolivia             0.481  Colombia              2.89  \n18   113 Ecuador             1.57   Paraguay              0.281 \n19   114 Argentina           0.918  Venezuela             0.608 \n20   115 Brazil              0.649  Chile                 0.543 \n21   116 Peru                0.0716 Uruguay               1.30  \n22   117 United States       2.72   United States         2.72  \n23   118 Canada              2.79   Panama                1.06  \n24   119 United States       0.826  United States         0.826 \n25   120 Chile               0.326  Colombia              1.19  \n26   121 Paraguay            0.396  Venezuela             1.08  \n27   122 Ecuador             0.450  Uruguay               1.98  \n28   123 Argentina           3.58   Bolivia               0.164 \n29   124 Brazil              1.61   Peru                  0.0758\n30   125 Costa Rica          1.60   Panama                1.00  \n31   126 United States       1.34   United States         1.34  \n32   127 Brazil              0.929  Venezuela             1.22  \n33   128 Bolivia             0.339  Ecuador               2.74  \n34   129 Argentina           1.28   Paraguay              0.210 \n35   130 Chile               0.364  Peru                  0.0775\n36   131 Colombia            0.746  Uruguay               1.78  \n37   132 Costa Rica          1.02   Panama                1.54  \n38   133 United States       2.01   United States         2.01  \n39   134 Bolivia             0.739  Paraguay              0.657 \n40   135 Colombia            1.89   Ecuador               0.671 \n41   136 Argentina           1.55   Peru                  0.0361\n42   137 Chile               0.513  Venezuela             0.507 \n43   138 Brazil              0.939  Uruguay               1.22  \n44   139 United States       0.996  United States         0.996 \n45   140 United States       2.12   United States         2.12  \n46   141 Chile               1.44   Panama                0.325 \n47   142 Canada              1.05   Mexico                1.94  \n48   143 United States       2.71   United States         2.71  \n49   144 Chile               0.472  Paraguay              0.262 \n50   145 Bolivia             0.365  Peru                  0.273 \n51   146 Brazil              1.41   Colombia              1.16  \n52   147 Ecuador             1.04   Venezuela             0.782 \n53   148 Argentina           0.592  Uruguay               0.961 \n54   149 United States       2.22   United States         2.22  \n55   150 Mexico              2.34   Panama                0.774 \n56   151 Bolivia             0.339  Uruguay               3.01  \n57   152 Colombia            2.51   Paraguay              0.247 \n58   153 Peru                0.0707 Venezuela             1.29  \n59   154 Argentina           1.44   Brazil                0.497 \n60   155 Chile               0.561  Ecuador               0.488 \n61   156 Brazil              1.00   Ecuador               1.15  \n62   157 Paraguay            0.262  Uruguay               1.74  \n63   158 Argentina           0.619  Chile                 0.274 \n64   159 Colombia            1.97   Peru                  0.0684\n65   160 Bolivia             0.336  Venezuela             2.99  \n66   161 Bolivia             0.340  Chile                 0.848 \n67   162 Uruguay             1.82   Venezuela             0.474 \n68   163 Ecuador             0.761  Peru                  0.121 \n69   164 Argentina           1.37   Colombia              0.584 \n70   165 Brazil              2.10   Paraguay              0.256 \n```\n\n\n:::\n:::\n\n\n\nIn this case, Argentina is expected to easily defeat Canada, and Uruguay will likely beat Colombia. However, Colombia won its game 1-0, so the final will be Argentina vs. Colombia, while the 3rd and 4th place game will be played between Canada and Uruguay.\n\n**The final is anticipated to be a close match, with the most likely result being 0-0, as indicated below. However, Argentina is expected to have a slightly higher probability of scoring more goals than Colombia.**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nresults_game <- tibble(\"Argentina\" = predictions[,7], \"Colombia\" = predictions[,8])\n\ndf_count <- results_game %>% \n  group_by(Argentina, Colombia) %>% \n  summarise(count = n(), .groups = \"keep\") %>% \n  ungroup()\n\ntotal_combinations <- nrow(results_game)\n\ndf_count <- df_count %>% \n    mutate(proportion = count/total_combinations)\n  \nggplot(df_count, aes(x = Argentina, y = Colombia, fill = proportion)) +\n  geom_tile() + \n  scale_fill_gradient(low = \"white\", high = \"blue\") + \n  labs(title = \"Heatmap of Goals Scored by the two teams\",\n       x = \"Argentina\", \n       y = \"Colombia\",\n       fill = \"Probability\") + \n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](euro_2024_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\n\nAs we saw, the model accurately predicted the scores and captured the strengths of each team. It also produced reasonable and accurate results for the final games based on the quarter-final outcomes. **Spain defeated England 2-1**, while the match between **Argentina and Colombia ended 0-0**, with Argentina scoring a goal in extra time.\n\nFor future models, incorporating dynamic strengths could improve accuracy.\n",
    "supporting": [
      "euro_2024_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}