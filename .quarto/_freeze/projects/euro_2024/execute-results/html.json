{
  "hash": "4ea983f32e935921a97e7b1e75bde4df",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Predicting Euro & Copa America - 2024\ndescription: A statistical model to analyze the results of the Euro Cup and the Copa America 2024.\nauthor: \n  - name: Mauro Florez\n  -  email: mf53@rice.edu\ndate: 2024-06-30\nbibliography: references.bib\n---\n\n\nIn this project, I will propose a model for predicting the Euro & Copa America - 2024 scores based on the model presented in [@florez2024].\n\n## Packages\n\nI will use a Bayesian model, so we need the following libraries\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrequire(rstanarm)\nrequire(rstantools)\nrequire(bayesplot)\n```\n:::\n\n\nAs well as\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrequire(readr)\nrequire(dplyr)\nrequire(lubridate)\nrequire(ggplot2)\nrequire(ggrepel)\nrequire(latex2exp)\n```\n:::\n\n\n## Data\n\nThe data is contained in this repository <https://github.com/martj42/international_results>.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurlfile = \"https://raw.githubusercontent.com/martj42/international_results/master/results.csv\"\n```\n:::\n\n\nWe load the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- read_csv(url(urlfile), show_col_types = FALSE)\n```\n:::\n\n\nThe proposed model is based on the teams' strengths attacking and defending. To train the model, we used the scores of games played since season 2023-2024.\n\n\n::: {.cell}\n\n```{.r .cell-code}\neuro_2024 = c('Albania','Austria','Belgium','Croatia','Czech Republic','Denmark','England','France','Georgia','Germany','Hungary','Italy','Netherlands','Poland','Portugal','Romania','Scotland','Serbia','Slovakia','Slovenia','Spain','Switzerland','Turkey','Ukraine')\n\namerica_2024 = sort(c('Argentina', 'Chile', 'Peru', 'Canada', 'Mexico', 'Ecuador', 'Venezuela', 'Jamaica', 'United States', 'Uruguay', 'Panama', 'Bolivia', 'Brazil', 'Colombia', 'Paraguay', 'Costa Rica'))  \n\nscores <- data %>% \n  filter(home_team %in% euro_2024 & away_team %in% euro_2024) %>% \n  filter(date > \"2023-06-01\") %>% \n  mutate(id = row_number(), cup = \"Euro\") %>% \n  bind_rows(data %>% \n  filter(home_team %in% america_2024 & away_team %in% america_2024) %>% \n  filter(date > \"2023-06-01\") %>% \n  mutate(id = row_number(), cup = \"America\")\n  )\n```\n:::\n\n\nFor example, we consider the following games played by Portugal.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nscores %>% \n  filter(home_team == \"Portugal\" | away_team == \"Portugal\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 11 × 11\n   date       home_team away_team home_score away_score tournament city  country\n   <date>     <chr>     <chr>          <dbl>      <dbl> <chr>      <chr> <chr>  \n 1 2023-09-08 Slovakia  Portugal           0          1 UEFA Euro… Brat… Slovak…\n 2 2023-10-13 Portugal  Slovakia           3          2 UEFA Euro… Porto Portug…\n 3 2024-03-26 Slovenia  Portugal           2          0 Friendly   Ljub… Sloven…\n 4 2024-06-08 Portugal  Croatia            1          2 Friendly   Oeir… Portug…\n 5 2024-06-18 Portugal  Czech Re…          2          1 UEFA Euro  Leip… Germany\n 6 2024-06-22 Turkey    Portugal           0          3 UEFA Euro  Dort… Germany\n 7 2024-06-26 Georgia   Portugal           2          0 UEFA Euro  Gels… Germany\n 8 2024-07-01 Portugal  Slovenia           0          0 UEFA Euro  Fran… Germany\n 9 2024-07-05 Portugal  France             0          0 UEFA Euro  Hamb… Germany\n10 2024-09-05 Portugal  Croatia            2          1 UEFA Nati… Lisb… Portug…\n11 2024-09-08 Portugal  Scotland           2          1 UEFA Nati… Lisb… Portug…\n# ℹ 3 more variables: neutral <lgl>, id <int>, cup <chr>\n```\n\n\n:::\n:::\n\n\nand the following games played by Colombia\n\n\n::: {.cell}\n\n```{.r .cell-code}\nscores %>% \n  filter(home_team == \"Colombia\" | away_team == \"Colombia\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 17 × 11\n   date       home_team away_team home_score away_score tournament city  country\n   <date>     <chr>     <chr>          <dbl>      <dbl> <chr>      <chr> <chr>  \n 1 2023-09-07 Colombia  Venezuela          1          0 FIFA Worl… Barr… Colomb…\n 2 2023-09-12 Chile     Colombia           0          0 FIFA Worl… Sant… Chile  \n 3 2023-10-12 Colombia  Uruguay            2          2 FIFA Worl… Barr… Colomb…\n 4 2023-10-17 Ecuador   Colombia           0          0 FIFA Worl… Quito Ecuador\n 5 2023-11-16 Colombia  Brazil             2          1 FIFA Worl… Barr… Colomb…\n 6 2023-11-21 Paraguay  Colombia           0          1 FIFA Worl… Asun… Paragu…\n 7 2023-12-16 Mexico    Colombia           2          3 Friendly   Los … United…\n 8 2024-06-08 United S… Colombia           1          5 Friendly   Land… United…\n 9 2024-06-15 Colombia  Bolivia            3          0 Friendly   Denv… United…\n10 2024-06-24 Colombia  Paraguay           2          1 Copa Amér… Hous… United…\n11 2024-06-28 Colombia  Costa Ri…          3          0 Copa Amér… Glen… United…\n12 2024-07-02 Brazil    Colombia           1          1 Copa Amér… Sant… United…\n13 2024-07-06 Colombia  Panama             5          0 Copa Amér… Glen… United…\n14 2024-07-10 Uruguay   Colombia           0          1 Copa Amér… Char… United…\n15 2024-07-14 Argentina Colombia           1          0 Copa Amér… Miam… United…\n16 2024-09-06 Peru      Colombia           1          1 FIFA Worl… Lima  Peru   \n17 2024-09-10 Colombia  Argentina          2          1 FIFA Worl… Barr… Colomb…\n# ℹ 3 more variables: neutral <lgl>, id <int>, cup <chr>\n```\n\n\n:::\n:::\n\n\n### Filtering data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhome_scores <- scores %>% \n  select(id, score = home_score, team = home_team, adversary = away_team, date = date, cup) %>% \n  mutate(condition = ifelse(scores$neutral, \"neutral\", \"home\"))\n  \naway_scores <- scores %>% \n  select(id, score = away_score, team = away_team, adversary = home_team, date = date, cup) %>% \n  mutate(condition = ifelse(scores$neutral, \"neutral\", \"away\"))\n\ntotal_scores <- union_all(home_scores, away_scores)\n```\n:::\n\n\nWe also consider the ranking FIFA of the teams as covariate. For every game, select the up-to-date ranking\n\n\n::: {.cell}\n\n```{.r .cell-code}\npath0 <- \"https://raw.githubusercontent.com/Dato-Futbol/fifa-ranking/master/ranking_fifa_historical.csv\"\nrank <- read_csv(url(path0), show_col_types = FALSE)\n\nrank <- rank %>% \n  select(team, total_points, date) %>% \n  group_by(date) %>% \n  mutate(ranking = rank(-total_points))\n```\n:::\n\n\nMerging the data will be\n\n\n::: {.cell}\n\n```{.r .cell-code}\nscores_rank <- total_scores %>% \n  left_join(rank, by = join_by(adversary == team), relationship = \"many-to-many\") %>% \n  filter(date.x >= date.y) %>% \n  mutate(diff_date = date.x - date.y) %>% \n  group_by(id, team) %>% \n  slice_min(diff_date) %>% \n  select(id, score, team, adversary, condition, date_game = date.x, ranking_adv = ranking, date_rank = date.y, cup)\n```\n:::\n\n\nWe are separating the data for both Euro and Copa America. For both cases, we will use as test data the games played after the quarter-finals. i.e, we will finish predicting the results of the semi-finals and the finals.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndate_euro = \"2024-07-09\"\ndate_ca = \"2024-07-09\"\n\ntrain_euro <- scores_rank %>% \n  filter(date_game < date_euro, cup == \"Euro\")\n\ntrain_america <- scores_rank %>% \n  filter(date_game < date_ca, cup == \"America\")\n\ntest_euro <- scores_rank %>% \n  filter(date_game >= date_euro, cup == \"Euro\")\n\ntest_america <- scores_rank %>% \n  filter(date_game >= date_ca, cup == \"America\")\n```\n:::\n\n\n## Fitting the model\n\nTo fit the model I would consider the scores are distributed as Poisson for simplicity, one better option is the Conway-Maxwell-Poisson as shown in [@florez2024]. However, we will use a simple model for computational reasons as we constantly update the model.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_euro <- stan_glm(score ~ 1 + team + adversary + condition + ranking_adv, data = train_euro, family = poisson, iter = 5000, contrasts = list(team = \"contr.sum\", adversary = \"contr.sum\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_america <- stan_glm(score ~ 1 + team + adversary + condition + ranking_adv, data = train_america, family = poisson, iter = 5000, contrasts = list(team = \"contr.sum\", adversary = \"contr.sum\"))\n```\n:::\n\n\n## Estimation\n\n### Euro\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstrength_att <- model_euro$coefficients[2:24]\nstrength_att <- c(strength_att, 0 - sum(strength_att))\n\nstrength_def <- model_euro$coefficients[25:47]\nstrength_def <- c(strength_def, 0 - sum(strength_def))\n\ncoeffs <- data.frame(team = euro_2024, strength_att, strength_def, row.names = c())\n```\n:::\n\n\nNow, we can plot the estimated strengths in the following way:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(coeffs, aes(x = strength_att, y = -strength_def)) +\n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"grey50\") +\n  geom_vline(xintercept = 0, linetype = \"dashed\", color = \"grey50\") +\n  geom_point() +\n  geom_label_repel(aes(label = team),\n                            box.padding = 0.25,\n                            point.padding = 0.5,\n                            segment.color = \"grey50\") +\n  xlab(expression(\"Better Attack\" %->% \"\")) +\n  ylab(expression(\"Better Defense\" %->% \"\")) + \n  ggtitle(\"Strengths of every team\") + \n  theme_classic() +\n  theme(plot.title = element_text(hjust = 0.5))\n```\n\n::: {.cell-output-display}\n![](euro_2024_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\nThis graph provides an intuition into the strengths and abilities of every team. Teams located in the origin have an overall performance, and below the axis are worse than the averages' team.\n\n### Copa America\n\nSimilarly for Copa america\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn <- length(america_2024)\nstrength_att <- model_america$coefficients[2:n]\nstrength_att <- c(strength_att, 0 - sum(strength_att))\n\nstrength_def <- model_america$coefficients[(n+1):(2*n-1)]\nstrength_def <- c(strength_def, 0 - sum(strength_def))\n\ncoeffs <- data.frame(team = america_2024, strength_att, strength_def, row.names = c())\n```\n:::\n\n\nNow, we can plot the estimated strengths in the following way:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(coeffs, aes(x = strength_att, y = -strength_def)) +\n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"grey50\") +\n  geom_vline(xintercept = 0, linetype = \"dashed\", color = \"grey50\") +\n  geom_point() +\n  geom_label_repel(aes(label = team),\n                            box.padding = 0.25,\n                            point.padding = 0.5,\n                            segment.color = \"grey50\") +\n  xlab(expression(\"Better Attack\" %->% \"\")) +\n  ylab(expression(\"Better Defense\" %->% \"\")) + \n  ggtitle(\"Strengths of every team\") + \n  theme_classic() +\n  theme(plot.title = element_text(hjust = 0.5))\n```\n\n::: {.cell-output-display}\n![](euro_2024_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n## Predictions\n\n### Euro\n\nNow, we predict the scores of the future games, i.e, the semifinals and the final.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_pred <- test_euro %>% \n  select(id, team, adversary, condition, ranking_adv)\n\npredictions <- posterior_predict(model_euro, newdata = test_pred) \n\nmean_goals <- apply(predictions, 2, mean)\n\ntest_pred <- test_pred %>% \n  ungroup() %>% \n  mutate(goals = mean_goals) %>% \n  group_by(id) %>% \n  summarise(\"Team 1\" = first(team),\n            \"Exp. Goals\" = first(goals),\n            \"Team 2\" = last(team),\n            \"Exp. Goals 2\" = last(goals)) \n```\n:::\n\n\nThe predictions of future games are:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_pred %>% \n  print(n = 1e3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 20 × 5\n      id `Team 1`       `Exp. Goals` `Team 2`    `Exp. Goals 2`\n   <int> <chr>                 <dbl> <chr>                <dbl>\n 1   103 France                0.392 Spain                0.845\n 2   104 England               1.92  Netherlands          1.60 \n 3   105 England               0.628 Spain                1.57 \n 4   106 Croatia               1.54  Portugal             1.31 \n 5   107 Poland                2.20  Scotland             0.943\n 6   108 Denmark               0.739 Switzerland          0.907\n 7   109 Serbia                0.359 Spain                1.84 \n 8   110 France                1.30  Italy                0.658\n 9   111 Austria               1.87  Slovenia             1.32 \n10   112 Germany               2.17  Hungary              0.872\n11   113 Czech Republic        1.79  Georgia              1.86 \n12   114 Albania               1.41  Ukraine              0.802\n13   115 Portugal              2.30  Scotland             0.748\n14   116 Croatia               1.96  Poland               1.26 \n15   117 Denmark               1.07  Serbia               0.475\n16   118 Spain                 1.28  Switzerland          0.647\n17   119 Belgium               0.679 France               0.831\n18   120 Germany               2.04  Netherlands          1.98 \n19   121 Albania               4.39  Georgia              1.17 \n20   122 Czech Republic        1.07  Ukraine              1.36 \n```\n\n\n:::\n:::\n\n\nParticullarly, the distribution of the prediction of the score for the final looks as shown below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nresults_game <- tibble(\"England\" = predictions[,5], \"Spain\" = predictions[,6])\n\ndf_count <- results_game %>% \n  group_by(England, Spain) %>% \n  summarise(count = n(), .groups = \"keep\") %>% \n  ungroup()\n\ntotal_combinations <- nrow(results_game)\n\ndf_count <- df_count %>% \n    mutate(proportion = count/total_combinations)\n  \nggplot(df_count, aes(x = England, y = Spain, fill = proportion)) +\n  geom_tile() + \n  scale_fill_gradient(low = \"white\", high = \"blue\") + \n  labs(title = \"Heatmap of Goals Scored by the two teams\",\n       x = \"England\", \n       y = \"Spain\",\n       fill = \"Probability\") + \n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](euro_2024_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\nAccording to this, it is likely that the final will be Spain vs. England. **Spain is expected to be the champion, with a predicted score of 2-0.**\n\n### Copa America\n\nSimilarly, we can generate the predictions for the last round of the games in Copa América\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_pred <- test_america %>% \n  select(id, team, adversary, condition, ranking_adv)\n\npredictions <- posterior_predict(model_america, newdata = test_pred) \n\nmean_goals <- apply(predictions, 2, mean)\n\ntest_pred <- test_pred %>% \n  ungroup() %>% \n  mutate(goals = mean_goals) %>% \n  group_by(id) %>% \n  summarise(\"Team 1\" = first(team),\n            \"Exp. Goals\" = first(goals),\n            \"Team 2\" = last(team),\n            \"Exp. Goals 2\" = last(goals)) \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_pred %>% \n  print(n = 1e3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 16 × 5\n      id `Team 1`      `Exp. Goals` `Team 2`      `Exp. Goals 2`\n   <int> <chr>                <dbl> <chr>                  <dbl>\n 1    96 Argentina            1.95  Canada                0.428 \n 2    97 Colombia             0.880 Uruguay               1.34  \n 3    98 Canada               0.496 Uruguay               2.57  \n 4    99 Argentina            1.03  Colombia              0.745 \n 5   100 Bolivia              0.545 Venezuela             1.65  \n 6   101 Argentina            1.08  Chile                 0.178 \n 7   102 Colombia             1.25  Peru                  0.109 \n 8   103 Paraguay             0.172 Uruguay               2.32  \n 9   104 Brazil               1.60  Ecuador               0.730 \n10   105 United States        2.10  United States         2.10  \n11   106 Canada               1.04  Mexico                1.81  \n12   107 Argentina            0.884 Colombia              0.932 \n13   108 Ecuador              1.26  Peru                  0.0758\n14   109 Bolivia              0.246 Chile                 1.11  \n15   110 Uruguay              1.29  Venezuela             0.761 \n16   111 Brazil               1.18  Paraguay              0.414 \n```\n\n\n:::\n:::\n\n\nIn this case, Argentina is expected to easily defeat Canada, and Uruguay will likely beat Colombia. However, Colombia won its game 1-0, so the final will be Argentina vs. Colombia, while the 3rd and 4th place game will be played between Canada and Uruguay.\n\n**The final is anticipated to be a close match, with the most likely result being 0-0, as indicated below. However, Argentina is expected to have a slightly higher probability of scoring more goals than Colombia.**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nresults_game <- tibble(\"Argentina\" = predictions[,7], \"Colombia\" = predictions[,8])\n\ndf_count <- results_game %>% \n  group_by(Argentina, Colombia) %>% \n  summarise(count = n(), .groups = \"keep\") %>% \n  ungroup()\n\ntotal_combinations <- nrow(results_game)\n\ndf_count <- df_count %>% \n    mutate(proportion = count/total_combinations)\n  \nggplot(df_count, aes(x = Argentina, y = Colombia, fill = proportion)) +\n  geom_tile() + \n  scale_fill_gradient(low = \"white\", high = \"blue\") + \n  labs(title = \"Heatmap of Goals Scored by the two teams\",\n       x = \"Argentina\", \n       y = \"Colombia\",\n       fill = \"Probability\") + \n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](euro_2024_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\nAs we saw, the model accurately predicted the scores and captured the strengths of each team. It also produced reasonable and accurate results for the final games based on the quarter-final outcomes. **Spain defeated England 2-1**, while the match between **Argentina and Colombia ended 0-0**, with Argentina scoring a goal in extra time.\n\nFor future models, incorporating dynamic strengths could improve accuracy.\n",
    "supporting": [
      "euro_2024_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}